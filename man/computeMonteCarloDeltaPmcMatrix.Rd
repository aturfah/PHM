% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Pmc.R
\name{computeMonteCarloDeltaPmcMatrix}
\alias{computeMonteCarloDeltaPmcMatrix}
\title{Monte Carlo \eqn{\Delta P_{\rm {mc}}} Matrix computation}
\usage{
computeMonteCarloDeltaPmcMatrix(
  paramsList,
  mcSamples = 1e+06,
  batchSize = mcSamples,
  numCores = 1,
  verbose = F
)
}
\arguments{
\item{paramsList}{List containing lists with each component GMM parameters. See \link{constructPmcParamsMclust} for format of components.}

\item{mcSamples}{Numeric for number of MC samples to use to approximate the integral.}

\item{batchSize}{Numeric for the observations to assign to each core. Helps with memory concerns. Default \code{mcSamples}.}

\item{numCores}{Number of cores to use in parallel::mclapply call. Default is 1.}

\item{verbose}{Boolean whether to print output messages}
}
\value{
\eqn{K \times K} matrix with each pair of clusters' \eqn{\Delta P_{\rm{mc}}} value.
}
\description{
Compute the \eqn{\Delta P_{\rm mc}} matrix for a set of clusters, where the \eqn{ij^{th}} element is \eqn{\Delta P_{\rm mc}^{(i, j)}}.
}
\details{
Each step of the PHM algorithm reduces the overall \eqn{P_{\rm mc}} by the \eqn{\Delta P_{\rm mc}} value of the merged clusters.
For each pair of clusters \eqn{j, k} we estimate their \eqn{\Delta P_{\rm mc}^{(j, k)}} value.
\deqn{\Delta \hat P_{\rm mc}^{(j, k)} = \frac{1}{M} \sum_{i=1}^M \pi_j(x_i) \, \pi_k(x_i) }
Where the \eqn{M} observations are sampled from the overall data density \eqn{P(x)}.
Note that \eqn{\Delta \hat P_{\rm mc}^{(j, k)} = \Delta \hat P_{\rm mc}^{(k, j)}}
}
\examples{
set.seed(1)
dat <- matrix(c(rnorm(200), rnorm(200, 3), rnorm(200, -3)), ncol=2, byrow=T)
partition <- c(rep(1, 100), rep(2, 100), rep(3, 100))
params <- constructPmcParamsPartition(partition, dat, G=1:5)
computeMonteCarloDeltaPmcMatrix(params, 1e5, verbose=T)

}
