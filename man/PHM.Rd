% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PHM.R
\name{PHM}
\alias{PHM}
\title{PHM Algorithm}
\usage{
PHM(
  mclustObj = NULL,
  paramsList = NULL,
  partition = NULL,
  data = NULL,
  deltaPmc = NULL,
  verbose = T,
  computePosterior = T,
  partitionWeightedDensity = T,
  storeDeltaPmc = T,
  storeParams = T,
  partitionModel = "VVI",
  partitionMaxComponents = 10,
  mc = T,
  ...
)
}
\arguments{
\item{mclustObj}{Output from \code{\link[mclust:Mclust]{mclust::Mclust()}}}

\item{paramsList}{A list generated from \code{\link[=constructPmcParamsMclust]{constructPmcParamsMclust()}}, \code{\link[=constructPmcParamsPartition]{constructPmcParamsPartition()}}, \code{\link[=constructPmcParamsPartition]{constructPmcParamsPartition()}} providing the initial cluster parameter estimates}

\item{partition}{A vector providing obseration partition memberships for the initial state}

\item{data}{An \eqn{N \times D} matrix of observations}

\item{verbose}{Boolean whether to suppress debug statements}

\item{computePosterior}{Boolean whether to compute the Posterior matrix for the merges}

\item{storeDeltaPmc}{Boolean whether to store the \eqn{\Delta P_{\rm{mc}}} matrix at each merging step. Initial \eqn{\Delta P_{\rm{mc}}} will be stored.}

\item{storeParams}{Boolean whether to store the intermediate mixture parameters. Initial parameters will be stored.}

\item{partitionModel}{If no partition provided, the covariance structure to estimate the density for each partition using \code{\link[=constructPmcParamsPartition]{constructPmcParamsPartition()}}}

\item{partitionMaxComponents}{If specifying \code{partition}, the maximum number of components to estimate the density for each partition}

\item{mc}{Boolean whether to use Monte Carlo integration to evaluate the \eqn{\Delta P_{\rm{mc}}} matrix}

\item{...}{Parameters pased to either \code{\link[=computeDeltaPmcMatrix]{computeDeltaPmcMatrix()}} or \code{\link[=computeMonteCarloDeltaPmcMatrix]{computeMonteCarloDeltaPmcMatrix()}} to evaluate the \eqn{\Delta P_{\rm{mc}}} matrix}
}
\value{
A list of lists for each step of the PHM algorithm. Each sublist contains
\itemize{
\item \code{clusters}: Number of clusters \eqn{K} at this merge
\item \code{posterior_matrix}: \eqn{N\times K} matrix of posterior cluster probabilities
\item \code{labels}: Partition of the observations
\item \code{pmc_change}: Value of \eqn{\Delta P_{\rm mc}} leading to this value of \eqn{K}
\item \code{params}: Cluster-specific densities
\item \code{pmc_components}: Number of original clusters involved in this merge
\item \code{pmc_accum}: Accumulated \eqn{\Delta P_{\rm mc}} in this subtree (unused)
\item \code{min_merge_pmc}: Minimum value of \eqn{\Delta P_{\rm mc}} for all merges in this subtree
\item \code{merge_components}: Index of components merged in this step
\item \code{pmc}: Overall \eqn{P_{\rm mc}} remaining in the cluster configuration
\item \code{pmc_matrix}: \eqn{\Delta P_{\rm mc}} matrix for the remaining clusters
}
}
\description{
Implements the PHM algorithm which constructs a clustering hierarchy by successively merging clusters with the largest \eqn{\Delta P_{\rm mc}} values.
}
\examples{
set.seed(1)
dat <- matrix(c(rnorm(200), rnorm(200, 3), rnorm(200, -3)), ncol=2, byrow=T)
partition <- c(rep(1, 100), rep(2, 100), rep(3, 100))
params <- constructPmcParamsPartition(partition, dat, G=1:5)
phm <- PHM(paramsList=params, data=dat, partition=partition)

}
